<#@ template language="C#" linePragmas="false" debug="false" hostspecific="false" visibility="internal" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>


<# if(this.Options.IsNamespaceSpecified) { #>
namespace <#= this.Options.Namespace #>
{
<# } #>
	<#= this.Options.AccessibilityString #> static partial class <#= this.Options.Symbol.Name #>_Extension 
	{
<# foreach(var method in this.Options.Methods) { #>
		public static bool <#= Helper.NameOf(method) #>(this <#= this.Options.DeconstructMethodParamsOf(method) #>)
<# foreach(var constraint in this.Options.TypeParameterConstraints) { #>
			<#= constraint #>
<# } #>
		{
			return <#= this.Options.FullName #>.<#= method.Name #>(__self<# foreach(var parameter in method.Parameters) { #>, out <#= parameter.Name #> <# } #>);
		}
<# } #>
	}
<# if(this.Options.IsNamespaceSpecified) { #>
}
<# } #>